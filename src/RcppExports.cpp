// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// compute_m_cov
double compute_m_cov(arma::vec data_0, arma::vec data_1, arma::mat X, arma::vec nu_vec, double sigma);
RcppExport SEXP _BGCR_compute_m_cov(SEXP data_0SEXP, SEXP data_1SEXP, SEXP XSEXP, SEXP nu_vecSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type data_0(data_0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type data_1(data_1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nu_vec(nu_vecSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_m_cov(data_0, data_1, X, nu_vec, sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BGCR_compute_m_cov", (DL_FUNC) &_BGCR_compute_m_cov, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_BGCR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
